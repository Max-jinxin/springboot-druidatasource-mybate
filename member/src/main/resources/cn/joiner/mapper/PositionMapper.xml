<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.joiner.mapper.PositionMapper">
  <resultMap id="BaseResultMap" type="cn.joiner.domain.Position">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="position_no" jdbcType="VARCHAR" property="positionNo" />
    <result column="coordinate" jdbcType="VARCHAR" property="coordinate" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, position_no, coordinate, description, create_time, update_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_position
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_position
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.joiner.domain.Position">
    insert into t_position (id, position_no, coordinate, 
      description, create_time, update_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{positionNo,jdbcType=VARCHAR}, #{coordinate,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.joiner.domain.Position" useGeneratedKeys="true" keyProperty="id">
    insert into t_position
    <trim prefix="(" suffix=")" suffixOverrides=",">
        id,
      <if test="positionNo != null">
        position_no,
      </if>
      <if test="coordinate != null">
        coordinate,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        #{id,jdbcType=INTEGER},
      <if test="positionNo != null">
        #{positionNo,jdbcType=VARCHAR},
      </if>
      <if test="coordinate != null">
        #{coordinate,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
        NOW(),
        NOW(),
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.joiner.domain.Position">
    update t_position
    <set>
      <if test="positionNo != null">
        position_no = #{positionNo,jdbcType=VARCHAR},
      </if>
      <if test="coordinate != null">
        coordinate = #{coordinate,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.joiner.domain.Position">
    update t_position
    set position_no = #{positionNo,jdbcType=VARCHAR},
      coordinate = #{coordinate,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
 </mapper>
  